version: '2'
services:
  disco:
    build:
      context: ../disco
      dockerfile: Dockerfile
    ports:
     - "1111:8080"
    environment:
      SERVER_PORT: 8080

  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    ports:
     - "2020:8080"
    environment:
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://disco:8080/eureka/
      EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS: 30

  rss-service:
    build:
      context: ../rss-service
      dockerfile: Dockerfile
    ports:
     - "5555:8080"
    environment:
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://disco:8080/eureka/
      EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS: 30
      SPRING_DATA_MONGODB_HOST: mongo

  users-service:
    build:
      context: ../users-service
      dockerfile: Dockerfile
    ports:
     - "2222:8080"
    environment:
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://disco:8080/eureka/
      EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS: 30
      SPRING_DATA_MONGODB_HOST: mongo

  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    ports:
     - "3333:8080"
    environment:
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://disco:8080/eureka/
      EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS: 30
      SPRING_DATA_MONGODB_HOST: mongo

  fetcher-service:
    build:
      context: ../fetcher-service
      dockerfile: Dockerfile
    ports:
     - "4444:8080"
    environment:
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://disco:8080/eureka/
      EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS: 30

  mongo:
    image: "mongo:3.3"
